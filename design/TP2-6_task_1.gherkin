Feature: Encrypt PII Data in Customer 360 Table

  Background:
    Given the table "purgo_playground.customer_360_raw_clone12" does not exist
    When the table "purgo_playground.customer_360_raw_clone12" exists
    Then drop the table "purgo_playground.customer_360_raw_clone12"
    And create a replica of "purgo_playground.customer_360_raw" as "purgo_playground.customer_360_raw_clone12"

  Scenario: Encrypt PII columns in the customer_360_raw_clone12 table
    Given the columns "name", "email", "phone", and "zip" in "purgo_playground.customer_360_raw_clone12" contain PII data
    When the PySpark script is executed
    Then encrypt the columns "name", "email", "phone", and "zip" using AES encryption
    And load the encrypted data back into "purgo_playground.customer_360_raw_clone12"
    And save the encryption key as a JSON file named "encryption_key_<current_datetime>.json" in "/Volumes/agilisium_playground/purgo_playground/de_dq12"

  Scenario Outline: Validate encryption process with different data inputs
    Given the column "<column_name>" in "purgo_playground.customer_360_raw_clone12" contains PII data
    When the PySpark script is executed
    Then encrypt the column "<column_name>" using AES encryption
    And verify the encrypted data is not equal to the original data
    And load the encrypted data back into "purgo_playground.customer_360_raw_clone12"

    Examples:
      | column_name |
      | name        |
      | email       |
      | phone       |
      | zip         |

  Scenario: Handle error when encryption key cannot be saved
    Given the PySpark script is executed
    When there is an error saving the encryption key
    Then log the error message "Failed to save encryption key at /Volumes/agilisium_playground/purgo_playground/de_dq12"
    And abort the encryption process

  Scenario: Handle error when table does not exist
    Given the table "purgo_playground.customer_360_raw_clone12" does not exist
    When the PySpark script is executed
    Then log the error message "Table purgo_playground.customer_360_raw_clone12 does not exist"
    And abort the encryption process

  Scenario: Validate encryption key format
    Given the encryption key is generated
    When the key is saved as a JSON file
    Then ensure the key is in Base64 format
    And the JSON file is named "encryption_key_<current_datetime>.json"

  Scenario: Validate data types of PII columns
    Given the columns "name", "email", "phone", and "zip" in "purgo_playground.customer_360_raw_clone12"
    When the PySpark script is executed
    Then ensure the data types are string for "name", "email", and "phone"
    And ensure the data type is string for "zip"